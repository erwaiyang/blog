<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Erwai the Programmer</title>
  <subtitle>just a little Taiwanese / Formosan programmer</subtitle>
  <link href="/blog/atom.xml" rel="self"/>
  
  <link href="http://erwaiyang.github.io/blog/"/>
  <updated>2016-04-07T10:13:22.000Z</updated>
  <id>http://erwaiyang.github.io/blog/</id>
  
  <author>
    <name>erwaiyang</name>
    <email>bdlas321@gmail.com</email>
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>A Step-by-Step Introduction to React Motion (Part I)</title>
    <link href="http://erwaiyang.github.io/blog/2016/04/07/A-Step-by-Step-Introduction-to-React-Motion-Part-I/"/>
    <id>http://erwaiyang.github.io/blog/2016/04/07/A-Step-by-Step-Introduction-to-React-Motion-Part-I/</id>
    <published>2016-04-07T09:49:20.000Z</published>
    <updated>2016-04-07T10:13:22.000Z</updated>
    
    <content type="html">&lt;p&gt;&lt;a href=&quot;https://github.com/chenglou/react-motion&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;react-motion&lt;/a&gt; library lets you perform animation in your react apps easily.&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h1 id=&quot;Flow-Type&quot;&gt;&lt;a href=&quot;#Flow-Type&quot; class=&quot;headerlink&quot; title=&quot;Flow Type&quot;&gt;&lt;/a&gt;Flow Type&lt;/h1&gt;&lt;p&gt;react-motion uses &lt;a href=&quot;http://flowtype.org/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;flow type&lt;/a&gt;, a static type checker by Facebook. You don’t need to use it, but it helps you understand react-motion easier.&lt;/p&gt;
&lt;p&gt;react-motion uses flow type to manage its APIs in a strict and brief way.&lt;/p&gt;
&lt;p&gt;You can find its Types &lt;a href=&quot;https://github.com/chenglou/react-motion/blob/026f4d18d3246e14abbf17bef0a9eda536934193/src/Types.js&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Let’s take &lt;code&gt;Transition&lt;/code&gt; for example.&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;export&lt;/span&gt; type TransitionProps = &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  defaultStyles?: &lt;span class=&quot;built_in&quot;&gt;Array&lt;/span&gt;&amp;lt;TransitionPlainStyle&amp;gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  styles: &lt;span class=&quot;built_in&quot;&gt;Array&lt;/span&gt;&amp;lt;TransitionStyle&amp;gt; | (previousInterpolatedStyles: ?&lt;span class=&quot;built_in&quot;&gt;Array&lt;/span&gt;&amp;lt;TransitionPlainStyle&amp;gt;) =&amp;gt; &lt;span class=&quot;built_in&quot;&gt;Array&lt;/span&gt;&amp;lt;TransitionStyle&amp;gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  children: (interpolatedStyles: &lt;span class=&quot;built_in&quot;&gt;Array&lt;/span&gt;&amp;lt;TransitionPlainStyle&amp;gt;) =&amp;gt; ReactElement,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  willEnter?: WillEnter,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  willLeave?: WillLeave,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;It tells that &lt;code&gt;Transition&lt;/code&gt;’s props should be &lt;code&gt;defaultStyles&lt;/code&gt;, &lt;code&gt;styles&lt;/code&gt;, &lt;code&gt;children&lt;/code&gt;, &lt;code&gt;willEnter&lt;/code&gt;, and &lt;code&gt;willLeave&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;The question mark (&lt;code&gt;?&lt;/code&gt;) means a property is optional; this is, if a property doesn’t have a question mark, it is required.&lt;/p&gt;
&lt;p&gt;So, now we know the props of &lt;code&gt;TransitionMotion&lt;/code&gt; — you have to fill in &lt;code&gt;styles&lt;/code&gt; and its &lt;code&gt;children&lt;/code&gt; at least.&lt;/p&gt;
&lt;p&gt;Its &lt;code&gt;children&lt;/code&gt; should be a function with an array as its argument which renders a react element.&lt;/p&gt;
&lt;h1 id=&quot;Helpers&quot;&gt;&lt;a href=&quot;#Helpers&quot; class=&quot;headerlink&quot; title=&quot;Helpers&quot;&gt;&lt;/a&gt;Helpers&lt;/h1&gt;&lt;p&gt;&lt;code&gt;spring&lt;/code&gt; is the most common used in react-motion.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Used in conjunction with the components below. Specifies the how to animate to the destination value, e.g. &lt;code&gt;spring(10, {stiffness: 120, damping: 17})&lt;/code&gt; means “animate to value 10, with a &lt;code&gt;spring&lt;/code&gt; of &lt;code&gt;stiffness&lt;/code&gt; 120 and &lt;code&gt;damping&lt;/code&gt; 17”.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;spring: (val: number, config?: SpringHelperConfig) =&amp;gt; OpaqueConfig&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;Its &lt;code&gt;Flow Type&lt;/code&gt; tells us: &lt;code&gt;spring&lt;/code&gt; should have at least first argument : &lt;code&gt;value&lt;/code&gt; (val). And &lt;code&gt;value&lt;/code&gt;’s type is &lt;code&gt;number&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;It is followed by optional &lt;code&gt;config&lt;/code&gt;, a &lt;code&gt;SpringHelperConfig&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;SpringHelperConfig&lt;/code&gt; has three properties, &lt;code&gt;stiffness&lt;/code&gt;, &lt;code&gt;damping&lt;/code&gt; and &lt;code&gt;precision&lt;/code&gt; (default to 0.01).&lt;/p&gt;
&lt;p&gt;react-motion also setups some &lt;a href=&quot;https://github.com/chenglou/react-motion/blob/026f4d18d3246e14abbf17bef0a9eda536934193/src/presets.js&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;code&gt;presets&lt;/code&gt;&lt;/a&gt; for you. You can use something like &lt;code&gt;spring( x, presets.gentle)&lt;/code&gt; ;&lt;/p&gt;
&lt;h1 id=&quot;Demo&quot;&gt;&lt;a href=&quot;#Demo&quot; class=&quot;headerlink&quot; title=&quot;Demo&quot;&gt;&lt;/a&gt;Demo&lt;/h1&gt;&lt;p&gt;Let’s look at the official demo, &lt;a href=&quot;http://chenglou.github.io/react-motion/demos/demo0-simple-transition/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Simple Transition&lt;/a&gt;. (&lt;a href=&quot;https://github.com/chenglou/react-motion/blob/master/demos/demo0-simple-transition/Demo.jsx&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;source code&lt;/a&gt;)&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;initial_button.png&quot; alt=&quot;simple transition&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;toggled.png&quot; alt=&quot;when button is pressed, the square animates to right; when button is pressed again, the square moves back to the left.&quot;&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;button&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  onMouseDown=&amp;#123;this.handleMouseDown&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  onTouchStart=&amp;#123;this.handleTouchStart&amp;#125;&amp;gt; Toggle &amp;lt;/button&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;It is quite simple. When button is pressed, toggle the state &lt;code&gt;open&lt;/code&gt;.&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.setState(&amp;#123;open: !&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.state.open&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;Motion style=&amp;#123;&amp;#123;x: spring(this.state.open ? 400 : 0)&amp;#125;&amp;#125;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#123;(&amp;#123;x&amp;#125;) =&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    // children is a callback which should accept the current value of `style`&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;lt;div className=”demo0&amp;quot;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       &amp;lt;div className=”demo0-block”&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            style=&amp;#123;&amp;#123; WebkitTransform: `translate3d($&amp;#123;x&amp;#125;px, 0, 0)`,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    transform: `translate3d($&amp;#123;x&amp;#125;px, 0, 0)`, &amp;#125;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       /&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     &amp;lt;/div&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &amp;lt;/Motion&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;x: spring(&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.state.open ? &lt;span class=&quot;number&quot;&gt;400&lt;/span&gt; : &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;)&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;code&gt;x&lt;/code&gt; is with value 400 if &lt;code&gt;this.state.open&lt;/code&gt; is true, and on the other hand with value 0 when &lt;code&gt;this.state.open&lt;/code&gt; is false.&lt;/p&gt;
&lt;p&gt;When &lt;code&gt;this.state.open&lt;/code&gt; is changed, the animation starts.&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;transform: &lt;span class=&quot;string&quot;&gt;`translate3d(&lt;span class=&quot;subst&quot;&gt;$&amp;#123;x&amp;#125;&lt;/span&gt;px, 0, 0)`&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;So the square moves from 0 to 400, or 400 to 0 while the button toggles.&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;a href=&quot;https://github.com/chenglou/react-motion&quot;&gt;react-motion&lt;/a&gt; library lets you perform animation in your react apps easily.&lt;/p&gt;
    
    </summary>
    
      <category term="react.js" scheme="http://erwaiyang.github.io/blog/categories/react-js/"/>
    
    
      <category term="javascript" scheme="http://erwaiyang.github.io/blog/tags/javascript/"/>
    
      <category term="react.js" scheme="http://erwaiyang.github.io/blog/tags/react-js/"/>
    
      <category term="react-motion" scheme="http://erwaiyang.github.io/blog/tags/react-motion/"/>
    
  </entry>
  
  <entry>
    <title>Mac OSX: DIY and Say Goodbye to XAMPP!</title>
    <link href="http://erwaiyang.github.io/blog/2016/01/26/Mac-OSX-DIY-and-Say-Goodbye-to-XAMPP/"/>
    <id>http://erwaiyang.github.io/blog/2016/01/26/Mac-OSX-DIY-and-Say-Goodbye-to-XAMPP/</id>
    <published>2016-01-25T18:09:30.000Z</published>
    <updated>2016-04-04T12:01:47.000Z</updated>
    
    <content type="html">&lt;p&gt;Apache, MySQL, and PHP are a very popular stack.&lt;/p&gt;
&lt;p&gt;Wordpress, based on PHP and MySQL, for example, is the most popular CMS in the world.  “WordPress was used by more than 23.3% of the top 10 million websites as of January 2015.” – Wikipedia&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://www.appservnetwork.com/en/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;AppServ&lt;/a&gt; is a simple PHP, MySQL, and Apache package for Windows OS; &lt;a href=&quot;https://www.apachefriends.org/index.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;XAMPP&lt;/a&gt; can be installed on Linux, Mac OSX and Windows.  “X” stands for cross-platform.&lt;/p&gt;
&lt;p&gt;However, XAMPP has replaced MySQL with MariaDB &lt;a href=&quot;https://en.wikipedia.org/wiki/XAMPP#Features&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;after version 5.6.14&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;If you are about to install Wordpress, it is troublesome.&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h1 id=&quot;Pros&quot;&gt;&lt;a href=&quot;#Pros&quot; class=&quot;headerlink&quot; title=&quot;Pros&quot;&gt;&lt;/a&gt;Pros&lt;/h1&gt;&lt;h2 id=&quot;1-Good-for-the-Lazy&quot;&gt;&lt;a href=&quot;#1-Good-for-the-Lazy&quot; class=&quot;headerlink&quot; title=&quot;1. Good for the Lazy&quot;&gt;&lt;/a&gt;1. Good for the Lazy&lt;/h2&gt;&lt;p&gt;Simple and fast: with several clicks, all you need is completely installed.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;xampp-installation.png&quot; alt=&quot;XAMPP installation&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;2-GUI&quot;&gt;&lt;a href=&quot;#2-GUI&quot; class=&quot;headerlink&quot; title=&quot;2. GUI&quot;&gt;&lt;/a&gt;2. GUI&lt;/h2&gt;&lt;p&gt;Simple start, stop and restart buttons.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;xampp-GUI.png&quot; alt=&quot;XAMPP GUI&quot;&gt;&lt;/p&gt;
&lt;h1 id=&quot;Cons&quot;&gt;&lt;a href=&quot;#Cons&quot; class=&quot;headerlink&quot; title=&quot;Cons&quot;&gt;&lt;/a&gt;Cons&lt;/h1&gt;&lt;h2 id=&quot;1-All-Files-are-under-the-XAMPP-directory&quot;&gt;&lt;a href=&quot;#1-All-Files-are-under-the-XAMPP-directory&quot; class=&quot;headerlink&quot; title=&quot;1. All Files are under the XAMPP directory&quot;&gt;&lt;/a&gt;1. All Files are under the &lt;code&gt;XAMPP&lt;/code&gt; directory&lt;/h2&gt;&lt;p&gt;Why it is not good?&lt;/p&gt;
&lt;p&gt;If you are familiar with Unix-like systems, you may want your files well-organized and store them in the correct directories.&lt;/p&gt;
&lt;p&gt;For example, instead of being put in &lt;code&gt;/Applications/XAMPP/bin/&lt;/code&gt;, &lt;code&gt;mysql&lt;/code&gt;, as a installed program, should be in &lt;code&gt;/usr/local/mysql&lt;/code&gt; and you can add it to your &lt;code&gt;PATH&lt;/code&gt; variable.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;under-directory.png&quot; alt=&quot;the XAMPP directory&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;2-Version-issue&quot;&gt;&lt;a href=&quot;#2-Version-issue&quot; class=&quot;headerlink&quot; title=&quot;2. Version issue&quot;&gt;&lt;/a&gt;2. Version issue&lt;/h2&gt;&lt;p&gt;PHP, MySQL or Apache version is decided by XAMPP, not by you; there may be a reason like compatibility that you have to use specific PHP, MySQL or Apache version.&lt;/p&gt;
&lt;p&gt;It is not so easy to upgrade or downgrade.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;xampp-versions.png&quot; alt=&quot;XAMPP versions and its component Versions (Wikipedia)&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;3-Your-Lovely-Component-was-even-replaced&quot;&gt;&lt;a href=&quot;#3-Your-Lovely-Component-was-even-replaced&quot; class=&quot;headerlink&quot; title=&quot;3. Your Lovely Component was even replaced!&quot;&gt;&lt;/a&gt;3. Your Lovely Component was even replaced!&lt;/h2&gt;&lt;p&gt;As I said before, XAMPP replaced MySQL with MariaDB.&lt;/p&gt;
&lt;p&gt;If you have used XAMPP for a long time and really need MySQL, ooops!&lt;/p&gt;
&lt;h1 id=&quot;Say-Goodbye-to-Package&quot;&gt;&lt;a href=&quot;#Say-Goodbye-to-Package&quot; class=&quot;headerlink&quot; title=&quot;Say Goodbye to Package&quot;&gt;&lt;/a&gt;Say Goodbye to Package&lt;/h1&gt;&lt;p&gt;In short, a package can never cater to everyone in the world.&lt;/p&gt;
&lt;p&gt;Therefore, let’s setup the environment by ourselves now!&lt;/p&gt;
&lt;h1 id=&quot;Apache&quot;&gt;&lt;a href=&quot;#Apache&quot; class=&quot;headerlink&quot; title=&quot;Apache&quot;&gt;&lt;/a&gt;Apache&lt;/h1&gt;&lt;p&gt;You need not download any binary or installation package.&lt;/p&gt;
&lt;p&gt;Mac have already installed Apache for you.&lt;/p&gt;
&lt;p&gt;Your web root directory is at &lt;code&gt;/Library/WebServer/Documents&lt;/code&gt;.&lt;/p&gt;
&lt;pre&gt;
$ cd /Library/WebServer/Documents
&lt;/pre&gt;

&lt;p&gt;If there is no &lt;code&gt;index.html&lt;/code&gt;, let’s create one.&lt;/p&gt;
&lt;pre&gt;
$ echo &#39;Hello World!&#39; &gt; index.html
&lt;/pre&gt;

&lt;p&gt;You need root permission to start apache.&lt;/p&gt;
&lt;pre&gt;
$ sudo apachectl start
&lt;/pre&gt;

&lt;p&gt;or login as root.&lt;/p&gt;
&lt;pre&gt;
# apachectl start
&lt;/pre&gt;

&lt;p&gt;Open your browser and go to localhost.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;localhost.png&quot; alt=&quot;Hello World Message!&quot;&gt;&lt;/p&gt;
&lt;h1 id=&quot;PHP&quot;&gt;&lt;a href=&quot;#PHP&quot; class=&quot;headerlink&quot; title=&quot;PHP&quot;&gt;&lt;/a&gt;PHP&lt;/h1&gt;&lt;p&gt;Like Apache, php is already ready and all we need to do is enable it.&lt;/p&gt;
&lt;h2 id=&quot;Enable-PHP-module&quot;&gt;&lt;a href=&quot;#Enable-PHP-module&quot; class=&quot;headerlink&quot; title=&quot;Enable PHP module&quot;&gt;&lt;/a&gt;Enable PHP module&lt;/h2&gt;&lt;p&gt;The config file &lt;code&gt;httpd.conf&lt;/code&gt; of Apache is in &lt;code&gt;/etc/apache2&lt;/code&gt;.&lt;/p&gt;
&lt;pre&gt;
$ cd /etc/apache2
&lt;/pre&gt;

&lt;p&gt;Open &lt;code&gt;httpd.conf&lt;/code&gt; and find this line:&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;#LoadModule php5_module libexec/apache2/libphp5.so&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;img src=&quot;httpd-conf.png&quot; alt=&quot;Apache config&quot;&gt;&lt;/p&gt;
&lt;p&gt;Delete the &lt;code&gt;#&lt;/code&gt;, save the file and PHP module will be loaded when Apache server restarts.&lt;/p&gt;
&lt;pre&gt;
$ sudo apachectl restart
&lt;/pre&gt;

&lt;p&gt;To see whether PHP module is loaded, you can create a &lt;code&gt;phpinfo.php&lt;/code&gt; file at the root directory of server.&lt;/p&gt;
&lt;figure class=&quot;highlight php&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;&amp;lt;?php&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;phpinfo();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;?&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;img src=&quot;phpinfo.png&quot; alt=&quot;phpinfo&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;Where’s-my-php-ini&quot;&gt;&lt;a href=&quot;#Where’s-my-php-ini&quot; class=&quot;headerlink&quot; title=&quot;Where’s my php.ini?&quot;&gt;&lt;/a&gt;Where’s my &lt;code&gt;php.ini&lt;/code&gt;?&lt;/h2&gt;&lt;p&gt;Your default &lt;code&gt;php.ini&lt;/code&gt; is in &lt;code&gt;/etc&lt;/code&gt;, which is a symlink of &lt;code&gt;/private/etc&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;php.ini.png&quot; alt=&quot;location of php.ini&quot;&gt;&lt;/p&gt;
&lt;h1 id=&quot;MySQL&quot;&gt;&lt;a href=&quot;#MySQL&quot; class=&quot;headerlink&quot; title=&quot;MySQL&quot;&gt;&lt;/a&gt;MySQL&lt;/h1&gt;&lt;h2 id=&quot;Installation&quot;&gt;&lt;a href=&quot;#Installation&quot; class=&quot;headerlink&quot; title=&quot;Installation&quot;&gt;&lt;/a&gt;Installation&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;http://dev.mysql.com/downloads/mysql/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Download MySQL&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Please follow the instruction.&lt;/p&gt;
&lt;h2 id=&quot;Start-MySQL&quot;&gt;&lt;a href=&quot;#Start-MySQL&quot; class=&quot;headerlink&quot; title=&quot;Start MySQL&quot;&gt;&lt;/a&gt;Start MySQL&lt;/h2&gt;&lt;p&gt;MySQL is usually installed in &lt;code&gt;/usr/local/mysql&lt;/code&gt;.&lt;/p&gt;
&lt;pre&gt;
    $ cd /usr/local/mysql
    $ ls
&lt;/pre&gt;

&lt;p&gt;There are lots of executables in &lt;code&gt;bin&lt;/code&gt;; and some are in &lt;code&gt;support-files&lt;/code&gt;.&lt;/p&gt;
&lt;pre&gt;
    $ cd support-files
&lt;/pre&gt;

&lt;p&gt;And start MySQL.&lt;/p&gt;
&lt;pre&gt;
    $ ./mysql.server start
&lt;/pre&gt;

&lt;h2 id=&quot;Socket&quot;&gt;&lt;a href=&quot;#Socket&quot; class=&quot;headerlink&quot; title=&quot;Socket&quot;&gt;&lt;/a&gt;Socket&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;For connections to localhost, MySQL programs attempt to connect to the local server by using a Unix socket file.&lt;br&gt;–&lt;a href=&quot;https://dev.mysql.com/doc/refman/5.5/en/connecting.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;mysql.com&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;So, the last step is making our Apache “know” where our mysql is.&lt;/p&gt;
&lt;pre&gt;
    cd /var
    mkdir mysql
    cd mysql
    ln -s /tmp/mysql.sock mysql.sock
&lt;/pre&gt;

&lt;p&gt;PS. &lt;code&gt;/tmp/mysql.sock&lt;/code&gt;: the default config stores socket file in &lt;code&gt;/tmp&lt;/code&gt;; if you have your own config, replace &lt;code&gt;/tmp/mysql.sock&lt;/code&gt; with where your socket really is.&lt;/p&gt;
&lt;h2 id=&quot;Optional-PHP-My-Admin&quot;&gt;&lt;a href=&quot;#Optional-PHP-My-Admin&quot; class=&quot;headerlink&quot; title=&quot;Optional: PHP My Admin&quot;&gt;&lt;/a&gt;Optional: PHP My Admin&lt;/h2&gt;&lt;p&gt;It is common to install &lt;a href=&quot;https://www.phpmyadmin.net/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;PHP My Admin&lt;/a&gt; to manage MySQL.&lt;/p&gt;
&lt;p&gt;Download it, uncompress the zip, make a dir named &lt;code&gt;phpmyadmin&lt;/code&gt; in &lt;code&gt;/Library/WebServer/Documents&lt;/code&gt;, and paste all files in it.&lt;/p&gt;
&lt;p&gt;Open &lt;a href=&quot;http://localhost/phpmyadmin&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://localhost/phpmyadmin&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Bravo! That’s all!&lt;/p&gt;
&lt;h1 id=&quot;Done&quot;&gt;&lt;a href=&quot;#Done&quot; class=&quot;headerlink&quot; title=&quot;Done!&quot;&gt;&lt;/a&gt;Done!&lt;/h1&gt;&lt;p&gt;Congratulations!&lt;/p&gt;
&lt;p&gt;Now you have your PHP-and-MYSQL Apache server on your mac!&lt;/p&gt;
&lt;h1 id=&quot;References&quot;&gt;&lt;a href=&quot;#References&quot; class=&quot;headerlink&quot; title=&quot;References&quot;&gt;&lt;/a&gt;References&lt;/h1&gt;&lt;ol&gt;
&lt;li&gt;&lt;a href=&quot;https://blog.allenchou.cc/mac-apache-php-mysql-setup/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;[Mac]不用懶人包，在 OS X 上安裝 Apache, PHP, MySQL&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://stackoverflow.com/questions/1951742/how-to-symlink-a-file-in-linux&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;How to symlink a file in Linux?&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;Apache, MySQL, and PHP are a very popular stack.&lt;/p&gt;
&lt;p&gt;Wordpress, based on PHP and MySQL, for example, is the most popular CMS in the world.  “WordPress was used by more than 23.3% of the top 10 million websites as of January 2015.” – Wikipedia&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://www.appservnetwork.com/en/&quot;&gt;AppServ&lt;/a&gt; is a simple PHP, MySQL, and Apache package for Windows OS; &lt;a href=&quot;https://www.apachefriends.org/index.html&quot;&gt;XAMPP&lt;/a&gt; can be installed on Linux, Mac OSX and Windows.  “X” stands for cross-platform.&lt;/p&gt;
&lt;p&gt;However, XAMPP has replaced MySQL with MariaDB &lt;a href=&quot;https://en.wikipedia.org/wiki/XAMPP#Features&quot;&gt;after version 5.6.14&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;If you are about to install Wordpress, it is troublesome.&lt;/p&gt;
    
    </summary>
    
    
      <category term="Mac" scheme="http://erwaiyang.github.io/blog/tags/Mac/"/>
    
      <category term="Mac OSX" scheme="http://erwaiyang.github.io/blog/tags/Mac-OSX/"/>
    
      <category term="XAMPP" scheme="http://erwaiyang.github.io/blog/tags/XAMPP/"/>
    
      <category term="MAMP" scheme="http://erwaiyang.github.io/blog/tags/MAMP/"/>
    
      <category term="Apache" scheme="http://erwaiyang.github.io/blog/tags/Apache/"/>
    
      <category term="PHP" scheme="http://erwaiyang.github.io/blog/tags/PHP/"/>
    
      <category term="MySQL" scheme="http://erwaiyang.github.io/blog/tags/MySQL/"/>
    
      <category term="WordPress" scheme="http://erwaiyang.github.io/blog/tags/WordPress/"/>
    
  </entry>
  
  <entry>
    <title>Android Notes: AsyncTask</title>
    <link href="http://erwaiyang.github.io/blog/2015/12/24/Android-Notes-AsyncTask/"/>
    <id>http://erwaiyang.github.io/blog/2015/12/24/Android-Notes-AsyncTask/</id>
    <published>2015-12-24T07:16:52.000Z</published>
    <updated>2016-04-04T12:01:47.000Z</updated>
    
    <content type="html">&lt;p&gt;&lt;code&gt;AsyncTask&lt;/code&gt; is a very quick method to do works in a new thread.  It is especially useful for accessing network resources.&lt;/p&gt;
&lt;p&gt;You can not connect to network if you’re in main thread, which is also called UI thread.&lt;/p&gt;
&lt;p&gt;It is “unsafe”.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;AsyncTask&lt;/code&gt; automatically creates a new thread for you; when your task is done, the thread will be terminated.&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h1 id=&quot;Some-Part-of-its-Source-Code&quot;&gt;&lt;a href=&quot;#Some-Part-of-its-Source-Code&quot; class=&quot;headerlink&quot; title=&quot;Some Part of its Source Code&quot;&gt;&lt;/a&gt;Some Part of its Source Code&lt;/h1&gt;&lt;!--__If you only want to know &#39;how to use it&#39;, please skip this section and jump to the next section &#39;Basic Usage&#39;.__--&gt;
&lt;p&gt;You can browser Android source code on &lt;a href=&quot;https://github.com/android/platform_frameworks_base/blob/master/core/java/android/os/AsyncTask.java&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;GitHub&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;And &lt;a href=&quot;http://developer.android.com/reference/android/os/AsyncTask.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;here is its Javadoc&lt;/a&gt;.&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;abstract&lt;/span&gt; &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;AsyncTask&lt;/span&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;Params&lt;/span&gt;, &lt;span class=&quot;title&quot;&gt;Progress&lt;/span&gt;, &lt;span class=&quot;title&quot;&gt;Result&lt;/span&gt;&amp;gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;comment&quot;&gt;//...&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;First of all, the &lt;code&gt;AsyncTask&lt;/code&gt; class is abstract.  So, you cannot create an instance of it and thus you must extend it.&lt;/p&gt;
&lt;p&gt;The only method you have to override is &lt;code&gt;doInBackground&lt;/code&gt;.&lt;br&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;@WorkerThread&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;abstract&lt;/span&gt; Result &lt;span class=&quot;title&quot;&gt;doInBackground&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(Params... params)&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h1 id=&quot;Basic-Usage&quot;&gt;&lt;a href=&quot;#Basic-Usage&quot; class=&quot;headerlink&quot; title=&quot;Basic Usage&quot;&gt;&lt;/a&gt;Basic Usage&lt;/h1&gt;&lt;p&gt;If you’ve read the source code throughoutly and carefully, you might be as touched as me since Google developers devoted themselves to developing such a great and easy-to-use class.(laugh)&lt;/p&gt;
&lt;p&gt;Its basic usage is do whatever you want in the override method &lt;code&gt;doInBackground&lt;/code&gt;.&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;MyAwesomeTask&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;AsyncTask&lt;/span&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;String&lt;/span&gt;, &lt;span class=&quot;title&quot;&gt;Integer&lt;/span&gt;, &lt;span class=&quot;title&quot;&gt;Integer&lt;/span&gt;&amp;gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;meta&quot;&gt;@Override&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;protected&lt;/span&gt; Integer &lt;span class=&quot;title&quot;&gt;doInBackground&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(String... params)&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;comment&quot;&gt;//Whatever you want to do in a new thread&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;comment&quot;&gt;//The most common usage is fetching network resources&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;First, when your class extend &lt;code&gt;AsyncTask&lt;/code&gt;, you have to decide three data types.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;params - the param array when you execute the task.&lt;/li&gt;
&lt;li&gt;progress - if you override &lt;code&gt;onProgressUpdate&lt;/code&gt;, you will find it really useful.&lt;/li&gt;
&lt;li&gt;Result - the &lt;code&gt;doInBackground&lt;/code&gt; should return the result when the task is done.&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&quot;Example&quot;&gt;&lt;a href=&quot;#Example&quot; class=&quot;headerlink&quot; title=&quot;Example&quot;&gt;&lt;/a&gt;Example&lt;/h2&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;64&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;65&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;66&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;67&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;package&lt;/span&gt; my.awesome.app;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; android.content.Context;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; android.os.AsyncTask;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; android.widget.ProgressBar;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; android.widget.Toast;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;GetImageTask&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;AsyncTask&lt;/span&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;String&lt;/span&gt;, &lt;span class=&quot;title&quot;&gt;Integer&lt;/span&gt;, &lt;span class=&quot;title&quot;&gt;Integer&lt;/span&gt;&amp;gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; Context context;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; ProgressBar progressBar;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;comment&quot;&gt;// Constructor.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;comment&quot;&gt;// Get some needed instances from the class which executes AsyncTask&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;GetImageTask&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(Context context, ProgressBar progressBar)&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.context = context;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.progressBar = progressBar;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;meta&quot;&gt;@Override&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;onPreExecute&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// onPreExecute runs on the UI thread&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// In fact, only doInBackground runs on new thread.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// Before the task starts doInBackground method, onPreExecute is called first.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.progressBar.setIndeterminate(&lt;span class=&quot;keyword&quot;&gt;false&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.progressBar.setMax(&lt;span class=&quot;number&quot;&gt;100&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;meta&quot;&gt;@Override&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;protected&lt;/span&gt; Integer &lt;span class=&quot;title&quot;&gt;doInBackground&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(String... urls)&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; length = urls.length;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt;(&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; i = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;; i&amp;lt;length; i++)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;// ~~~WORKING~~~&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;// Simulating working progress&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;try&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                Thread.sleep(&lt;span class=&quot;number&quot;&gt;1000&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#125; &lt;span class=&quot;keyword&quot;&gt;catch&lt;/span&gt; (InterruptedException e) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                e.printStackTrace();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&lt;span class=&quot;comment&quot;&gt;// when you call publishProgress(progress), &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&lt;span class=&quot;comment&quot;&gt;// the program calls onProgressUpdate.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&lt;span class=&quot;comment&quot;&gt;// but they still work parallely&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            publishProgress( i * (&lt;span class=&quot;number&quot;&gt;100&lt;/span&gt;/length) );&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;meta&quot;&gt;@Override&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;onProgressUpdate&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(Integer... progress)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// onProgressUpdate runs on the UI thread&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        progressBar.setProgress(progress[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;]);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;meta&quot;&gt;@Override&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;onPostExecute&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(Integer result)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// onPostExecute runs on the UI thread&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// When doInBackground returns the final result,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// this method will be called.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        progressBar.setProgress(&lt;span class=&quot;number&quot;&gt;100&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;//show a dialog which tells the user the work is done.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// ...&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;Meaningful-Progress&quot;&gt;&lt;a href=&quot;#Meaningful-Progress&quot; class=&quot;headerlink&quot; title=&quot;Meaningful Progress&quot;&gt;&lt;/a&gt;Meaningful &lt;code&gt;Progress&lt;/code&gt;&lt;/h2&gt;&lt;p&gt;Declare some &lt;a href=&quot;https://en.wikipedia.org/wiki/List_of_HTTP_status_codes&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http status code&lt;/a&gt; constants.&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; HTTP_CODE_OK = &lt;span class=&quot;number&quot;&gt;200&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; HTTP_CODE_BAD_REQUEST = &lt;span class=&quot;number&quot;&gt;400&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; HTTP_CODE_FORBIDDEN = &lt;span class=&quot;number&quot;&gt;403&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; HTTP_CODE_NOT_FOUND = &lt;span class=&quot;number&quot;&gt;404&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;and publish progress:&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt;(&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; i = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;; i&amp;lt;length; i++)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;comment&quot;&gt;//..........&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;comment&quot;&gt;// if else / switch case&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; the_result_of_this_image = HTTP_CODE_OK;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	publishProgress( i * (&lt;span class=&quot;number&quot;&gt;100&lt;/span&gt;/length) , the_result_of_this_image );&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;@Override&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;onProgressUpdate&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(Integer... progress)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// onProgressUpdate runs on the UI thread&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    progressBar.setProgress(progress[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;]);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    Toast.makeText(context, &lt;span class=&quot;string&quot;&gt;&quot;Result:&quot;&lt;/span&gt;+progress[&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;], Toast.LENGTH_LONG).show();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;Meaningful-Result&quot;&gt;&lt;a href=&quot;#Meaningful-Result&quot; class=&quot;headerlink&quot; title=&quot;Meaningful Result&quot;&gt;&lt;/a&gt;Meaningful &lt;code&gt;Result&lt;/code&gt;&lt;/h2&gt;&lt;p&gt;Now we want to pass the result (Integer) to &lt;code&gt;onPostExecute&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Declare the variable &lt;code&gt;length&lt;/code&gt; globally:&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; length;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;Assign urls.length to it.&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;@Override&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;protected&lt;/span&gt; Integer &lt;span class=&quot;title&quot;&gt;doInBackground&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(String... urls)&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    length = urls.length;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;Counts only when we get that image successfully.&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; count = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt;(&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; i = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;; i&amp;lt;length; i++)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;comment&quot;&gt;//..........&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;comment&quot;&gt;// only when we get that image successfully&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(statusCode == HTTP_CODE_OK)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		count++;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	publishProgress( i * (&lt;span class=&quot;number&quot;&gt;100&lt;/span&gt;/length) , the_result_of_this_image );&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; count;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;When the task is done, we know how many images did we get successfully.&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;@Override&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;onPostExecute&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(Integer result)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// onPostExecute runs on the UI thread&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    progressBar.setProgress(&lt;span class=&quot;number&quot;&gt;100&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//show a dialog which tells the user the work is done.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// ...&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    Toast.makeText(context, &lt;span class=&quot;string&quot;&gt;&quot;OK:&quot;&lt;/span&gt;+result+&lt;span class=&quot;string&quot;&gt;&quot; failed:&quot;&lt;/span&gt;+(length - result), Toast.LENGTH_LONG).show();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h1 id=&quot;Call-Our-Awesome-Task&quot;&gt;&lt;a href=&quot;#Call-Our-Awesome-Task&quot; class=&quot;headerlink&quot; title=&quot;Call Our Awesome Task!&quot;&gt;&lt;/a&gt;Call Our Awesome Task!&lt;/h1&gt;&lt;p&gt;We just finished our &lt;code&gt;GetImageTask&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;In our &lt;code&gt;Activity&lt;/code&gt;, &lt;code&gt;Fragment&lt;/code&gt; or whatever, we execute it:&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; GetImageTask(mContext, progressBar).execute(urlsArray);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h1 id=&quot;The-Killer-Feature&quot;&gt;&lt;a href=&quot;#The-Killer-Feature&quot; class=&quot;headerlink&quot; title=&quot;The Killer Feature!&quot;&gt;&lt;/a&gt;The Killer Feature!&lt;/h1&gt;&lt;p&gt;You might think it is good enough and be very happy with &lt;code&gt;AsyncTask&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;However, the best is yet to be.&lt;/p&gt;
&lt;p&gt;The Killer Feature of &lt;code&gt;AsyncTask&lt;/code&gt; - Let the Task communicates with the main thread by using “&lt;strong&gt;the delegate&lt;/strong&gt;”.&lt;/p&gt;
&lt;p&gt;(It will be a new article. To Be Continued.)&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;code&gt;AsyncTask&lt;/code&gt; is a very quick method to do works in a new thread.  It is especially useful for accessing network resources.&lt;/p&gt;
&lt;p&gt;You can not connect to network if you’re in main thread, which is also called UI thread.&lt;/p&gt;
&lt;p&gt;It is “unsafe”.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;AsyncTask&lt;/code&gt; automatically creates a new thread for you; when your task is done, the thread will be terminated.&lt;/p&gt;
    
    </summary>
    
      <category term="Android" scheme="http://erwaiyang.github.io/blog/categories/Android/"/>
    
    
      <category term="android" scheme="http://erwaiyang.github.io/blog/tags/android/"/>
    
      <category term="notes" scheme="http://erwaiyang.github.io/blog/tags/notes/"/>
    
      <category term="java" scheme="http://erwaiyang.github.io/blog/tags/java/"/>
    
      <category term="AsyncTask" scheme="http://erwaiyang.github.io/blog/tags/AsyncTask/"/>
    
  </entry>
  
</feed>
